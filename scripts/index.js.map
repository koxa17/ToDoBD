{"version":3,"sources":["index.js"],"names":["btn","document","querySelectorAll","addListenerForBtn","addEventListener","searchForm","event","form","forms","target","dataset","sendForm","bind","once","forEach","User","[object Object]","token","fetch","then","response","json","data","tasks","error","location","href","Promise","resolve","authWithEmailAndPassword","email","pass","method","body","JSON","stringify","password","returnSecureToken","headers","Content-Type","code","preventDefault","valueInput","Array","from","this","elements","input","map","item","value"],"mappings":"AACA,MAAMA,IAAMC,SAASC,iBAAiB,sBAGtC,SAASC,kBAAkBH,KACvBA,IAAII,iBAAiB,SAAS,WAC1BC,WAAWC,UAKnB,SAASD,WAAWC,OAChB,MAAMC,KAAON,SAASO,MAAMF,MAAMG,OAAOC,QAAQH,MACjDA,KAAKH,iBAAiB,SAAUO,SAASC,KAAKL,MAAO,CAAEM,MAAM,IAXjEb,IAAIc,QAAQX,mBAmBZ,MAAMY,KAEFC,aAAaC,OACT,OAAKA,MAIEC,MAAM,yDAAmED,OAC3EE,KAAKC,UAAYA,SAASC,QAC1BF,KAAKG,MAAQA,MACbH,KAAKI,QACF,GAAIA,OAASA,MAAMC,MACf,MAAO,oBAAoBD,MAAMC,YAErCvB,SAASwB,SAASC,KAAO,aATtBC,QAAQC,QAAQ,4BAenC,SAASC,yBAAyBC,MAAOC,MAGrC,OAAOb,MADK,oHACM,CACVc,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBL,MAAOA,MACPM,SAAUL,KACVM,mBAAmB,IAEvBC,QAAS,CACLC,eAAgB,sBAGvBpB,KAAKC,UAAYA,SAASC,QAC1BF,KAAKG,OACF,GAAIA,KAAKE,MAAMgB,MAAQ,IACnB,MAAMlB,KAAKE,MAEX,OAAOF,OAMvB,SAASX,SAASL,OACdA,MAAMmC,iBACN,MACMC,WADWC,MAAMC,KAAKC,KAAKC,SAASC,OACdC,IAAIC,MAAQA,KAAKC,OAC7CrB,yBAAyBa,WAAW,GAAIA,WAAW","file":"index.js","sourcesContent":["// Понесло хуйню лепить =)\r\nconst btn = document.querySelectorAll('.header a[href=\"\"]');\r\nbtn.forEach(addListenerForBtn);\r\n\r\nfunction addListenerForBtn(btn) {\r\n    btn.addEventListener('click', function() {\r\n        searchForm(event);\r\n    });\r\n}\r\n\r\n\r\nfunction searchForm(event) {\r\n    const form = document.forms[event.target.dataset.form];\r\n    form.addEventListener('submit', sendForm.bind(form), { once: true });\r\n}\r\n\r\n\r\n\r\n\r\n// Sign In\r\n\r\nclass User {\r\n\r\n    static fetch(token) {\r\n        if (!token) {\r\n            // TODO: нотивикацию добавить\r\n            return Promise.resolve(`<p>Увас нет токена!</p>`)\r\n        }\r\n        return fetch('https://ratatype-c2d32.firebaseio.com/' + 'tasks.json' + `?auth=${token}`)\r\n            .then(response => response.json())\r\n            .then(data => data)\r\n            .then(tasks => {\r\n                if (tasks && tasks.error) {\r\n                    return `<p class=\"error\">${tasks.error}</p>`\r\n                }\r\n                document.location.href = \"app.html\"\r\n            })\r\n    }\r\n\r\n}\r\n\r\nfunction authWithEmailAndPassword(email, pass) {\r\n    const api = `AIzaSyDhOh7k8JVKCa7_WIc9Mq2SM8IbQmXDmlE`;\r\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${api}`;\r\n    return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: pass,\r\n                returnSecureToken: true\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.error.code >= 400) {\r\n                throw data.error;\r\n            } else {\r\n                return data\r\n            }\r\n        })\r\n\r\n}\r\n\r\nfunction sendForm(event) {\r\n    event.preventDefault();\r\n    const allInput = Array.from(this.elements.input);\r\n    const valueInput = allInput.map(item => item.value);\r\n    authWithEmailAndPassword(valueInput[0], valueInput[1]);\r\n}"]}